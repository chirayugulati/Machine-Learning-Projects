import pandas as pd

# File paths to the excel files
ExposureResults_long = 'ExposureResults_Exposure_1M_wMigration_99.5_JobId984.xlsx'
ExposureResults_short = 'ExposureResults_Exposure_1M_wMigration_99.5CI_JobId984.xlsx'
StructuredData = "StructuredData_submitted_to_Moody's_20210630.xlsx"

# Put the PD Mapping data into a dataframe
pd_map_df = pd.read_excel(StructuredData, sheet_name = 'PDMap', header = 1)
pd_map_df.drop(axis = 1, columns = 'PD Rating', inplace = True)
# Groupby to get the least rating as a PD rating can have multiple 
# corresponding Moody's Rating, S&P rating and Fitch rating
pd_map_df = pd_map_df.groupby('PD').max()
pd_map_df.reset_index(inplace = True)

# Join the '6_Final_To_Moodys_very first' sheet with the PD Mapping data and get the required columns
structured_data_df = pd.read_excel(StructuredData, sheet_name = '6_Final_To_Moodys_very first', header = 1)
structured_data_df = structured_data_df[['Primary_Asset_ID','PD']]
structured_data_df = structured_data_df.set_index('PD').join(pd_map_df.set_index('PD'))
structured_data_df.reset_index(inplace = True)

# Dump data from the ExposureResults long file into a dataframe
ExposureResults_long_df = pd.read_excel(ExposureResults_long)

# Dump data from the ExposureResults short file into a dataframe
ExposureResults_short_df = pd.read_excel(ExposureResults_short)

# Extract the 'Asset Class' from the 'Portfolio Name'
asset_classes = list(ExposureResults_short_df['Portfolio Name'])
for i in range(0, len(asset_classes)):
    split_result = []
    split_result = asset_classes[i].split('_')
    if len(split_result) == 3:
        asset_classes[i] = split_result[2]
    elif len(split_result) == 4:
        asset_classes[i] = split_result[2] + ' ' + split_result[3]
        
ExposureResults_short_df['Asset Class'] = asset_classes
ExposureResults_short_df = ExposureResults_short_df[['Instrument ID','Asset Class']]

# Join the long and short files based on the IDs
ExposureResults_df = ExposureResults_short_df.join(ExposureResults_long_df, lsuffix='_l', rsuffix='_r')
ExposureResults_df.drop(axis = 1, columns = 'Instrument ID_r', inplace = True)
ExposureResults_df.rename(columns={"Instrument ID_l": "Instrument ID"}, inplace = True)

# Extract the 'Primary_Asset_ID' from 'Instrument ID'
ids = list(ExposureResults_df['Instrument ID'])
for i in range(0, len(ids)):
    split_result = []
    split_result = ids[i].split('_')
    if len(split_result) == 2:
        ids[i] = split_result[0]
    elif len(split_result) == 3:
        ids[i] = split_result[1]
ExposureResults_df['Primary_Asset_ID'] = ids

# Drop columns which are have no values at all
ExposureResults_df.dropna(axis=1, how='all', inplace = True)

# Get the extra Primary Asset IDs in the Structured Data file
IDs_in_structured_data = list(structured_data_df['Primary_Asset_ID'])
IDs_in_ExposureResults = list(ExposureResults_df['Primary_Asset_ID'])
IDs_in_structured_data_not_in_ExposureResults = list(set(IDs_in_structured_data) - set(IDs_in_ExposureResults))
extra_IDs = pd.DataFrame(data = IDs_in_structured_data_not_in_ExposureResults)
extra_IDs.to_excel('Extra IDs in the Structured Data file.xlsx', index = False)
print("The extra Primary Asset IDs in the Structured Data file are stored in the file 'Extra IDs in the Structured Data file.xlsx'")

# Join the dataframes with the ratings for each ID and the features for each ID
ExposureResults_df = ExposureResults_df.set_index('Primary_Asset_ID').join(structured_data_df.set_index('Primary_Asset_ID'))
ExposureResults_df.reset_index(inplace = True)

# Get a list of numeric columns as only those columns can give top 10 values
cols_to_be_evaluated = list(ExposureResults_df.select_dtypes(include=['float64', 'int64']).columns)

# Get the into of IDs with top 10 values for each numeric column for 
# each unique value of 'Asset Class',"Moody's Rating", 'S&P rating' and 'Fitch rating'

features_to_sort_by = ['Asset Class',"Moody's Rating", 'S&P rating', 'Fitch rating']
for feature in features_to_sort_by:
    unique_values_of_feature = list(ExposureResults_df[feature].unique())
    for unique_value in unique_values_of_feature:
        file_name = feature + ' - ' + str(unique_value) + '.xlsx'
        with pd.ExcelWriter(file_name) as writer: 
            temp_df = pd.DataFrame()
            temp_df = ExposureResults_df.where(ExposureResults_df[feature] == unique_value)
            i = 0
            for i in range(0,len(cols_to_be_evaluated)):
                temp_df.nlargest(n=10, columns = cols_to_be_evaluated[i])
                sheet_name = 'Sheet ' + str(i)
                temp_df.to_excel(writer, sheet_name = sheet_name, index = False)
                print('Data for ', feature, ' = ', unique_value,'with top 10 values for ',
                      cols_to_be_evaluated[i], 'is stored in the file ', file_name, "in the sheet '" , sheet_name, "'")
